class Solution {
    public int findCircleNum(int[][] isConnected) {
        ArrayList<ArrayList<Integer>>adj=new ArrayList<>();
        int n=isConnected.length;
        for(int i=0;i<n;i++)adj.add(new ArrayList<>());
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                if(isConnected[i][j]!=0&&i!=j){
                    adj.get(i).add(j);
                    adj.get(j).add(i);
                }
            }
        }
        boolean vis[]=new boolean[n];
        int ct=0;
        for(int i=0;i<n;i++){
            if(!vis[i]){
                ct++;
                dfs(adj,vis,i);
            }
        }
        return ct;
    }
    public static void dfs(ArrayList<ArrayList<Integer>>adj,boolean vis[],int node){
        vis[node]=true;
        for(int i :adj.get(node)){
            if(!vis[i]){
                dfs(adj,vis,i);
            }
        }
        return;
    }
}