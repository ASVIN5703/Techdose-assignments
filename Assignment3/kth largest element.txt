class Solution {
    public int findKthLargest(int[] nums, int k) {
        return find(nums, 0, nums.length-1, nums.length - k);
    }

    public int find(int[] arr, int beg, int end, int k) {
        if (beg > end) return 0;

        int i = beg-1, pivot = arr[end], left = beg;

        while (beg < end) {
            if (arr[beg] <= pivot) {
                swap(++i, beg, arr);
            }
            beg++;
        }
        swap(++i, beg, arr);

        if (i == k) return arr[i];
        else if (i > k) return find(arr, left, i-1, k);
        else return find(arr, i + 1, end, k);
    }

    public void swap(int i, int j, int[] arr) {
        int temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    }
}